package com.collection.prg.map;

public class CustomHashMap<K, V> {
	public static void main(String[] args) {
		CustomHashMap<Integer, String> map = new CustomHashMap<Integer, String>();
		map.put(1, "Bangalore");
		map.put(2, "Bijapur");
		map.display();
		System.out.println("map.get(1):"+map.get(1));
		System.out.println("map.remove(3) :"+map.remove(3));
		map.display();
	}

	Entry<?, ?> table[] = new Entry[4];

	public void put(K key, V value) {
		if (key != null) {
			int hash = key.hashCode() % 4;
			Entry<K, V> entry = (Entry<K, V>) table[hash];
			if (entry != null) {
				if (entry.getKey().equals(key)) {
					entry.setValue(value);
				} else {
					entry.setNext(new Entry<K, V>(key, value));
				}
				entry = entry.getNext();
			} else {
				table[hash] = new Entry<K, V>(key, value);
			}
		}
	}

	public V get(K key) {
		int hash = key.hashCode() % 4;
		Entry<K, V> entry = (Entry<K, V>) table[hash];
		while (entry != null) {
			if (entry.getKey().equals(key)) {
				return entry.getValue();
			}
			entry = entry.next;
		}
		return null;
	}

	public void display() {
		System.out.println("elements are;");
		for (int i = 0; i < table.length; i++) {
			Entry<K, V> entry = (Entry<K, V>) table[i];
			while (entry != null) {
				System.out.println(entry.getKey() + " " + entry.getValue());
				entry = entry.next;
			}
		}
	}

	public boolean remove(K deletekey) {
		int hash = deletekey.hashCode() % 4;
		Entry<K, V> currententry = (Entry<K, V>) table[hash];
		Entry<K, V> prev = null;
		if(table[hash] == null){
            return false;
      }else{
		while (currententry != null) {
			if (currententry.getKey().equals(deletekey)) {
				if (prev == null) {
					table[hash] = table[hash].next;
					return true;
				} else {
					prev.next = currententry.next;
					
				}
			} else {
				prev = currententry;
				currententry = currententry.getNext();
			}
		}
      }
		return false;
	}
}

class Entry<K, V> {
	K key;
	V value;
	Entry<K,V> next;

	public Entry(K key, V value) {
		super();
		this.key = key;
		this.value = value;
	}

	public K getKey() {
		return key;
	}

	public void setKey(K key) {
		this.key = key;
	}

	public V getValue() {
		return value;
	}

	public void setValue(V value) {
		this.value = value;
	}

	public Entry<K,V> getNext() {
		return next;
	}

	public void setNext(Entry<K,V> next) {
		this.next = next;
	}

}
/*
elements are;
1 Bangalore
2 Bijapur
map.get(1):Bangalore
map.remove(3) :false
elements are;
1 Bangalore
2 Bijapur


*/
